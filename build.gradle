plugins {
	id 'org.springframework.boot' version '2.1.3.RELEASE'
	id "com.gorylenko.gradle-git-properties" version '2.0.0'
//	id "net.ltgt.apt-idea" version "0.21"
//	id "net.ltgt.apt-eclipse" version "0.21"
	id 'java'
	id 'eclipse-wtp'
	id 'idea'
	id 'jacoco'
	id 'build-dashboard'
	id 'maven-publish'
}

apply plugin: 'io.spring.dependency-management'

group = 'org.erd'
version = '1.0'
sourceCompatibility = '1.8'

ext {
	camelVersion = '2.23.1'
	springCloudVersion = 'Greenwich.SR1'
	mapstructVersion = '1.3.0.Final'
}

springBoot {
	buildInfo()
}

generateGitProperties {
	onlyIf {
		!source.isEmpty()
	}
}

repositories {
	mavenCentral()
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
		mavenBom "org.apache.camel:camel-bom:$camelVersion"
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	compile 'org.springframework.boot:spring-boot-starter-data-jpa'
	compile 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-kubernetes'
	compile 'org.apache.camel:camel-spring-boot-starter'
	implementation 'org.apache.camel:camel-swagger-java-starter'
	implementation 'org.apache.camel:camel-jackson-starter'
	compile 'org.apache.camel:camel-jpa-starter'
	compile 'org.apache.camel:camel-servlet-starter'
//	implementation 'org.apache.camel:camel-undertow-starter'
	compile "org.mapstruct:mapstruct-jdk8:$mapstructVersion"
	compile 'org.apache.commons:commons-lang3:3.8.1'
	runtimeOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.webjars:swagger-ui:3.20.9'
	runtimeOnly 'com.h2database:h2'
//	runtimeOnly 'org.springframework.boot:spring-boot-starter-undertow'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.apache.camel:camel-test-spring'
	testImplementation 'org.junit.jupiter:junit-jupiter-api'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
	testRuntimeOnly 'org.junit.vintage:junit-vintage-engine'

	annotationProcessor 'org.springframework:spring-context-indexer'
	annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"
}

tasks.withType(Test) {
	useJUnitPlatform()

	reports {
		junitXml.outputPerTestCase = true
	}

	jacoco {
		append = true
		destinationFile = file "$buildDir/coverage-results/jacoco.exec"
	}
}

publishing {
	publications {
		app(MavenPublication) {
			artifactId 'camel-sample'
			from components.java
		}
	}
}
